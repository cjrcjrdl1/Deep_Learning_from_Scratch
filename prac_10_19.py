import numpy as np

# 미분 구현의 나쁜 예
def numerical_diff(f,x):
    h = 10e-50 # 가급적 작은 값 즉 0에 가깝게 하기 위해 이렇게 함
    # 하지만 이 방식은 반올림 오차 문제를 일으킴
    # 반올림 오차란 작은 값이 생략되어 최종 계산 결과에 오차가 생기게 함
    return (f(x+h) - f(x))/h


print(np.float32(1e-50))
# 이와 같이 0이 되어버리니 문제가 됨

# 첫번째 개선점 h를 10^-4f를 이용하면 좋은 결과를 얻는다고 알려짐
# 두번째 개선은 함수 f의 차분(임의 두 점에서의 함수 값들의 차이)과 관련한 것

def numerical_diff(f,x):
    h=1e-4 # 0.0001
    return (f(x+h) - f(x-h))/(2*h)

# 아주 작은 차분으로 미분하는 것을 수치 미분
# 수식을 전개해 미분하는 것은 해석적이라는 말을 이용해서
# 해석적 해 혹은 해석적으로 미분하다 등으로 표현
# 해석적 미분은 오차를 포함하지 않는 진정한 미분 값을 구해준다.
# 해석적 미분 = 수학시간에 배운 미분
# 수치 미분 = 이를 근사치로 계산한 것